<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <LangVersion>latest</LangVersion>
    <UserSecretsId>webmail-c23d27a4-eb88-4b18-9b77-2a93f3b15119</UserSecretsId>
  </PropertyGroup>


  <ItemGroup>
    <PackageReference Include="AspNet.Security.OAuth.Validation" Version="2.0.0" />
    <PackageReference Include="MailKit" Version="1.20.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Facebook" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.Twitter" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Http.Abstractions" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.3" />
    <PackageReference Include="OpenIddict" Version="2.0.1" />
    <PackageReference Include="OpenIddict.EntityFrameworkCore" Version="2.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.4.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="5.4.1" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="Serilog" Version="2.5.1-dev-00869" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="2.0.2" />
    <PackageReference Include="Serilog.Sinks.Seq" Version="3.4.0" />
    <PackageReference Include="Moq" Version="4.7.142" />
    <PackageReference Include="Microsoft.AspNetCore.TestHost" Version="3.1.3" />
    <PackageReference Include="System.Runtime.Serialization.Json" Version="4.3.0" />

    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.3" PrivateAssets="All" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.2" PrivateAssets="All" />

  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="xunit" Version="2.3.1" />
    <DotNetCliToolReference Include="dotnet-xunit" Version="2.3.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Compile Remove="ClientApp\app\shared\directives\Validators\**" />
    <Content Remove="ClientApp\**" />
    <EmbeddedResource Remove="ClientApp\app\shared\directives\Validators\**" />
    <None Remove="ClientApp\app\shared\directives\Validators\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\boot.server.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\app\mailAccounts\servers.json" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\app\core\models\mail-server-model.ts" />
    <TypeScriptCompile Include="ClientApp\app\mailAccounts\mailAccounts.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\mailAccounts\mailAccounts.service.ts" />
    <TypeScriptCompile Include="ClientApp\boot.server.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\dist\" />
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
    
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
